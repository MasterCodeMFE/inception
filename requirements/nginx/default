##
# Default server configuration
##

server {
    # Escucha en el puerto 80 para redirigir a HTTPS
    listen 80;
    listen [::]:80;
    server_name _;
    return 301 https://$host$request_uri; # Redirección a HTTPS
}

server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

    # Rutas a tus certificados SSL/TLS
    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;

    # Configuración de protocolos TLS: Solo TLSv1.2 y TLSv1.3
    ssl_protocols TLSv1.2 TLSv1.3;

    # Cifrados seguros (recomendado para TLSv1.2 y TLSv1.3)
    ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256';

    # Preferir los cifrados del servidor
    ssl_prefer_server_ciphers on;

    # Configuración de HSTS (HTTP Strict Transport Security)
    # Esto asegura que el navegador solo se conecte a través de HTTPS en el futuro
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    # Opciones SSL adicionales para mayor seguridad
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_session_tickets off; # Deshabilitar tickets de sesión para Forward Secrecy

    # Configuración de Diffie-Hellman (generar si es necesario, no lo incluimos aquí para simplificar)
    # ssl_dhparam /etc/nginx/dhparam.pem;

    root /var/www/html; # Asegúrate de que esta ruta sea la misma que la del WordPress

    index index.php index.html index.htm index.nginx-debian.html;

    server_name _;

    location / {
        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass wp-php:9000; # Asegúrate de que 'wp-php' sea el nombre de tu servicio PHP-FPM en docker-compose.yml
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    # deny all;
    #}
}
